#database configuration
server.port=8082
spring.datasource.url=jdbc:mysql://localhost:3306/movieapp?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=nazim
spring.datasource.driver-class=com.cj.jdbc.Driver 


#docker configuration
#spring.datasource.url=jdbc:mysql://mysql-container:3306/movieappdbdocker
#spring.datasource.username=test-user
#spring.datasource.password=nazim

#Aws configuration
#spring.datasource.url=jdbc:mysql://nazimdb2101343.c918bifp8fik.us-west-2.rds.amazonaws.com:3306/movieappaws?createDatabaseIfNotExist=true
#spring.datasource.username=root
#spring.datasource.password=junaid123


#jpa configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#kafka configuration
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=mygroup
spring.kafka.consumer.auto-offset-reset=earliest

#prometheus grafana configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always